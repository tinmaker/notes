var ticket ='';
var debugFlag = true;function SSOUtil() {	function sendRequest(method, url, content, callback, type, process,			complete) {		http_request = false;		if (window.XMLHttpRequest) {			http_request = new XMLHttpRequest();			if (http_request.overrideMimeType) {				http_request.overrideMimeType("text/xml")			}		} else {			if (window.ActiveXObject) {				try {					http_request = new ActiveXObject(Msxml2.XMLHTTP)				} catch (e) {					try {						http_request = new ActiveXObject("Microsoft.XMLHTTP")					} catch (e) {					}				}			}		}		if (!http_request) {			if (debugFlag) {				window.alert("can't create XMLHttpRequest instance")			}			return false		}		http_request.onreadystatechange = function() {			if (http_request.readyState == 4) {				if (complete) {					complete()				}				if (http_request.status == 200) {					var resp = http_request.responseText;					if (type && type == "json") {						callback(typeof (resp) == "object" ? resp : eval("("								+ resp + ")"))					} else {						callback(resp)					}				}			} else {				if (process) {					process()				}			}		};		if (method == "get") {			http_request.open(method, url, true)		} else {			if (method == "post") {				http_request.open(method, url, true);				http_request.setRequestHeader("Content-Type",						"application/x-www-form-urlencoded")			} else {				if (debugFlag) {					windows.alert("invalid type of http request!")				}				return false			}		}		http_request.send(content)	}	function getTicketUrl(url, ticket) {		var newUrl = "";		ticket = encodeURIComponent(ticket);		if (url.indexOf("?") == -1) {			newUrl = url + "?ticket=" + ticket		} else {			newUrl = url + "&ticket=" + ticket		}		return newUrl + "&rand=" + Math.random()	}	SSOUtil.prototype.ssoProcess = function(url, options) {		if (typeof (ticket) != "undefined") {			if (options) {				var sendType = options.sendType;				var extendData = options.extendData;				var navigateTo = "";				var extendStr = "";				if (extendData) {					for ( var key in extendData) {						extendStr += "&" + key + "=" + extendData[key]					}					navigateTo = getTicketUrl(url, ticket) + extendStr				} else {					navigateTo = getTicketUrl(url, ticket)				}				if (sendType) {					if (sendType == 0) {						window.location.href = navigateTo					} else {						if (sendType == 1) {							var method = options.method;							var callback = options.callback;							if (callback && typeof (callback) == "function") {								if (method && method == "get") {									navigateTo += "&sendType=ajax";									sendRequest("get", navigateTo, null,											callback, options.type,											options.process, options.complete)								} else {									extendStr = "ticket="											+ encodeURIComponent(ticket)											+ extendStr + "&sendType=ajax";									sendRequest("post", url, extendStr,											callback, options.type,											options.process, options.complete)								}							} else {								if (debugFlag) {									alert("callback function has't been setted or its type is not function.")								}							}						}					}				}			} else {				window.location.href = getTicketUrl(url, ticket)			}		} else {		}	};	SSOUtil.prototype.ticketExist = function() {		return typeof (ticket) != "undefined" && ticket && ticket != ""	}};
